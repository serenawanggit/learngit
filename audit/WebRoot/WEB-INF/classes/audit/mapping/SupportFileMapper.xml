<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="audit.dao.SupportFileMapper">
	<resultMap id="BaseResultMap" type="audit.model.Support_File">
		<id column="sid" property="id" jdbcType="INTEGER" />
		<result column="filename" property="filename" jdbcType="VARCHAR" />
		<result column="dir" property="dir" jdbcType="VARCHAR" />
		<result column="uploader" property="uploader" jdbcType="INTEGER" />
		<result column="uploadername" property="uploadername" jdbcType="VARCHAR" />
		<result column="uploadtime" property="uploadtime" jdbcType="TIMESTAMP" />
		<result column="flag" property="flag" jdbcType="INTEGER" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="pid" property="pid" jdbcType="INTEGER"/>
	</resultMap>
	<!-- 用来定义可重用的sql代码段 -->
	<sql id="Base_Column_List">
		sid,filename,dir,uploader,uploadername,uploadtime,flag ,status,pid
	</sql>
	
	<!-- 查询所有数据 -->
	<select id="selectAll_data" useCache="false" flushCache="false" resultMap="BaseResultMap">
		SELECT * FROM AS_P_SUPPORTFILE
	</select>
	
	<!-- 查询单个 -->
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		SELECT
		<include refid="Base_Column_List" />
		FROM AS_P_SUPPORTFILE
		WHERE sID = #{sid,jdbcType=INTEGER}
	</select>
	
	<!-- 插入 -->
	<insert id="insert" parameterType="audit.model.Support_File">
		insert into AS_P_SUPPORTFILE (filename,dir,uploader,uploadername,uploadtime,flag,status,pid
		)
		values (#{filename,jdbcType=VARCHAR},#{dir,jdbcType=VARCHAR},#{uploader,jdbcType=INTEGER},
		#{uploadername,jdbcType=VARCHAR},#{uploadtime,jdbcType=TIMESTAMP}, #{flag,jdbcType=INTEGER}, #{status,jdbcType=INTEGER},
		#{pid,jdbcType=INTEGER}
		)
	</insert>
	<!-- 删除 -->
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from AS_P_SUPPORTFILE
		where sid = #{sid,jdbcType=INTEGER}
	</delete>
	
	<!-- 更新 -->
	<update id="update_supportfile" parameterType="audit.model.Support_File">  
        UPDATE AS_P_SUPPORTFILE SET STATUS=#{STATUS}  WHERE sID=#{sID}  
    </update>  
    
    <!-- 根据方案id查询支撑材料 -->
	<select id="selectFileByPid" useCache="false" flushCache="false" resultMap="BaseResultMap">
		SELECT * FROM AS_P_SUPPORTFILE where pid = #{pid}
	</select>
	
</mapper>